package DLMS;


/**
* DLMS/_dlmsStub.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from DLMS.idl
* Saturday, December 12, 2015 7:33:14 PM EST
*/

public class _dlmsStub extends org.omg.CORBA.portable.ObjectImpl implements DLMS.dlms
{

  public String openAccount (String Bank, String fName, String lName, String email, String phoneNumber, String password)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("openAccount", true);
                $out.write_string (Bank);
                $out.write_string (fName);
                $out.write_string (lName);
                $out.write_string (email);
                $out.write_string (phoneNumber);
                $out.write_string (password);
                $in = _invoke ($out);
                String $result = $in.read_string ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return openAccount (Bank, fName, lName, email, phoneNumber, password        );
            } finally {
                _releaseReply ($in);
            }
  } // openAccount

  public String getLoan (String Bank, String accountNumber, String password, String loanAmount)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("getLoan", true);
                $out.write_string (Bank);
                $out.write_string (accountNumber);
                $out.write_string (password);
                $out.write_string (loanAmount);
                $in = _invoke ($out);
                String $result = $in.read_string ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return getLoan (Bank, accountNumber, password, loanAmount        );
            } finally {
                _releaseReply ($in);
            }
  } // getLoan

  public String delayPayment (String Bank, String loanID, String currentD, String newD)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("delayPayment", true);
                $out.write_string (Bank);
                $out.write_string (loanID);
                $out.write_string (currentD);
                $out.write_string (newD);
                $in = _invoke ($out);
                String $result = $in.read_string ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return delayPayment (Bank, loanID, currentD, newD        );
            } finally {
                _releaseReply ($in);
            }
  } // delayPayment

  public String printCustomerInfo (String Bank)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("printCustomerInfo", true);
                $out.write_string (Bank);
                $in = _invoke ($out);
                String $result = $in.read_string ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return printCustomerInfo (Bank        );
            } finally {
                _releaseReply ($in);
            }
  } // printCustomerInfo

  public String transferLoan (String loanID, String currentBank, String otherBank)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("transferLoan", true);
                $out.write_string (loanID);
                $out.write_string (currentBank);
                $out.write_string (otherBank);
                $in = _invoke ($out);
                String $result = $in.read_string ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return transferLoan (loanID, currentBank, otherBank        );
            } finally {
                _releaseReply ($in);
            }
  } // transferLoan

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:DLMS/dlms:1.0"};

  public String[] _ids ()
  {
    return (String[])__ids.clone ();
  }

  private void readObject (java.io.ObjectInputStream s) throws java.io.IOException
  {
     String str = s.readUTF ();
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, props);
   try {
     org.omg.CORBA.Object obj = orb.string_to_object (str);
     org.omg.CORBA.portable.Delegate delegate = ((org.omg.CORBA.portable.ObjectImpl) obj)._get_delegate ();
     _set_delegate (delegate);
   } finally {
     orb.destroy() ;
   }
  }

  private void writeObject (java.io.ObjectOutputStream s) throws java.io.IOException
  {
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, props);
   try {
     String str = orb.object_to_string (this);
     s.writeUTF (str);
   } finally {
     orb.destroy() ;
   }
  }
} // class _dlmsStub
